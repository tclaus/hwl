'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.18052
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.18052.
'
Namespace CloudDatabase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="HWLClouldServiceSoap", [Namespace]:="http://microsoft.com/webservices/")>  _
    Partial Public Class HWLClouldService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RequestTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataBaseBackupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RequestNewDatabaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ClausSoftware.HWLInterops.My.MySettings.Default.HWLInterops_WebReference_HWLClouldService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RequestTokenCompleted As RequestTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataBaseBackupCompleted As GetDataBaseBackupCompletedEventHandler
        
        '''<remarks/>
        Public Event RequestNewDatabaseCompleted As RequestNewDatabaseCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/RequestToken", RequestNamespace:="http://microsoft.com/webservices/", ResponseNamespace:="http://microsoft.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RequestToken(ByVal userName As String, ByVal companyName As String, ByVal mailAdress As String, ByVal productID As String, ByVal servicePassword As String) As Boolean
            Dim results() As Object = Me.Invoke("RequestToken", New Object() {userName, companyName, mailAdress, productID, servicePassword})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RequestTokenAsync(ByVal userName As String, ByVal companyName As String, ByVal mailAdress As String, ByVal productID As String, ByVal servicePassword As String)
            Me.RequestTokenAsync(userName, companyName, mailAdress, productID, servicePassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestTokenAsync(ByVal userName As String, ByVal companyName As String, ByVal mailAdress As String, ByVal productID As String, ByVal servicePassword As String, ByVal userState As Object)
            If (Me.RequestTokenOperationCompleted Is Nothing) Then
                Me.RequestTokenOperationCompleted = AddressOf Me.OnRequestTokenOperationCompleted
            End If
            Me.InvokeAsync("RequestToken", New Object() {userName, companyName, mailAdress, productID, servicePassword}, Me.RequestTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequestTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.RequestTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RequestTokenCompleted(Me, New RequestTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetDataBaseBackup", RequestNamespace:="http://microsoft.com/webservices/", ResponseNamespace:="http://microsoft.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataBaseBackup(ByVal token As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetDataBaseBackup", New Object() {token})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataBaseBackupAsync(ByVal token As String)
            Me.GetDataBaseBackupAsync(token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataBaseBackupAsync(ByVal token As String, ByVal userState As Object)
            If (Me.GetDataBaseBackupOperationCompleted Is Nothing) Then
                Me.GetDataBaseBackupOperationCompleted = AddressOf Me.OnGetDataBaseBackupOperationCompleted
            End If
            Me.InvokeAsync("GetDataBaseBackup", New Object() {token}, Me.GetDataBaseBackupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataBaseBackupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataBaseBackupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataBaseBackupCompleted(Me, New GetDataBaseBackupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/RequestNewDatabase", RequestNamespace:="http://microsoft.com/webservices/", ResponseNamespace:="http://microsoft.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RequestNewDatabase(ByVal token As String) As ConnectionData
            Dim results() As Object = Me.Invoke("RequestNewDatabase", New Object() {token})
            Return CType(results(0),ConnectionData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RequestNewDatabaseAsync(ByVal token As String)
            Me.RequestNewDatabaseAsync(token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestNewDatabaseAsync(ByVal token As String, ByVal userState As Object)
            If (Me.RequestNewDatabaseOperationCompleted Is Nothing) Then
                Me.RequestNewDatabaseOperationCompleted = AddressOf Me.OnRequestNewDatabaseOperationCompleted
            End If
            Me.InvokeAsync("RequestNewDatabase", New Object() {token}, Me.RequestNewDatabaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequestNewDatabaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.RequestNewDatabaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RequestNewDatabaseCompleted(Me, New RequestNewDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/")>  _
    Partial Public Class ConnectionData
        
        Private serverNameField As String
        
        Private passwordField As String
        
        Private usernameField As String
        
        Private databaseNameField As String
        
        '''<remarks/>
        Public Property ServerName() As String
            Get
                Return Me.serverNameField
            End Get
            Set
                Me.serverNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DatabaseName() As String
            Get
                Return Me.databaseNameField
            End Get
            Set
                Me.databaseNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RequestTokenCompletedEventHandler(ByVal sender As Object, ByVal e As RequestTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RequestTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetDataBaseBackupCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataBaseBackupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataBaseBackupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RequestNewDatabaseCompletedEventHandler(ByVal sender As Object, ByVal e As RequestNewDatabaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RequestNewDatabaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ConnectionData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ConnectionData)
            End Get
        End Property
    End Class
End Namespace
