<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vista Api</name>
    </assembly>
    <members>
        <member name="T:Vista_Api.FileDialog">
            <summary>
            Displays a dialog box from which the user can select a file.
            </summary>
            <remarks>
            This class will use the Vista style file dialog if possible, and automatically fall back to the old-style 
            dialog on versions of Windows older than Vista.
            </remarks>
        </member>
        <member name="E:Vista_Api.FileDialog.FileOk">
            <summary>
            Occurs when the user clicks on the Open or Save button on a file dialog box.
            </summary>
        </member>
        <member name="M:Vista_Api.FileDialog.#ctor">
            <summary>
            Creates a new insatnce of <see cref="T:Vista_Api.FileDialog" /> class.
            </summary>
        </member>
        <member name="P:Vista_Api.FileDialog.AddExtension">
            <summary>
            Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name 
            if the user omits the extension.
            </summary>
            <value>
            true if the dialog box adds an extension to a file name if the user omits the extension; otherwise, false. 
            The default value is true.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.CheckFileExists">
            <summary>
            Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.
            </summary>
            <value>
            true if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, false. The default value is false.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.CheckPathExists">
            <summary>
            Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.
            </summary>
            <value>
            true if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, false. 
            The default value is true.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.DefaultExt">
            <summary>
            Gets or sets the default file name extension.
            </summary>
            <value>
            The default file name extension. The returned string does not include the period. The default value is an empty string ("").
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.DereferenceLinks">
            <summary>
            Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut 
            or whether it returns the location of the shortcut (.lnk).
            </summary>
            <value>
            true if the dialog box returns the location of the file referenced by the shortcut; otherwise, false.
            The default value is true.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.FileName">
            <summary>
            Gets or sets a string containing the file name selected in the file dialog box.
            </summary>
            <value>
            The file name selected in the file dialog box. The default value is an empty string ("").
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.FileNames">
            <summary>
            Gets the file names of all selected files in the dialog box.
            </summary>
            <value>
            An array of type String, containing the file names of all selected files in the dialog box.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.Filter">
            <summary>
            Gets or sets the current file name filter string, which determines the choices that appear in the 
            "Save as file type" or "Files of type" box in the dialog box.
            </summary>
            <value>
            The file filtering options available in the dialog box.
            </value>
            <exception cref="T:System.ArgumentException">Filter format is invalid.</exception>
        </member>
        <member name="P:Vista_Api.FileDialog.FilterIndex">
            <summary>
            Gets or sets the index of the filter currently selected in the file dialog box.
            </summary>
            <value>
            A value containing the index of the filter currently selected in the file dialog box. The default value is 1.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.InitialDirectory">
            <summary>
            Gets or sets the initial directory displayed by the file dialog box.
            </summary>
            <value>
            The initial directory displayed by the file dialog box. The default is an empty string ("").
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.RestoreDirectory">
            <summary>
            Gets or sets a value indicating whether the dialog box restores the current directory before closing.
            </summary>
            <value>
            true if the dialog box restores the current directory to its original value if the user changed the 
            directory while searching for files; otherwise, false. The default value is false.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.ShowHelp">
            <summary>
            Gets or sets a value indicating whether the Help button is displayed in the file dialog box.
            </summary>
            <value>
            true if the dialog box includes a help button; otherwise, false. The default value is false.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.Title">
            <summary>
            Gets or sets the file dialog box title.
            </summary>
            <value>
            The file dialog box title. The default value is an empty string ("").
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.SupportMultiDottedExtensions">
            <summary>
            Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.
            </summary>
            <value>
            true if the dialog box supports multiple file name extensions; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.ValidateNames">
            <summary>
            Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.
            </summary>
            <value>
            true if the dialog box accepts only valid Win32 file names; otherwise, false. The default value is true.
            </value>
        </member>
        <member name="P:Vista_Api.FileDialog.DownlevelDialog">
            <summary>
            Provides the downlevel file dialog which is to be used if the Vista-style
            dialog is not supported.
            </summary>
        </member>
        <member name="M:Vista_Api.FileDialog.Reset">
            <summary>
            Resets all properties to their default values.
            </summary>
        </member>
        <member name="M:Vista_Api.FileDialog.RunDialog(System.IntPtr)">
            <summary>
            Specifies a common dialog box.
            </summary>
            <param name="hwndOwner">A value that represents the window handle of the owner window for the common dialog box.</param>
            <returns>true if the file could be opened; otherwise, false.</returns>
        </member>
        <member name="M:Vista_Api.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Vista_Api.FileDialog.FileOk" /> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vista_Api.FileDialog.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Vista_Api.FileDialog" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Vista_Api.FolderBrowserDialog">
            <summary>
            Prompts the user to select a folder.
            </summary>
            <remarks>
            This class will use the Vista style Select Folder dialog if possible, or the regular FolderBrowserDialog
            if it is not. Note that the Vista style dialog is very different, so using this class without testing
            in both Vista and older Windows versions is not recommended.
            </remarks>
        </member>
        <member name="E:Vista_Api.FolderBrowserDialog.HelpRequest">
            <summary>
            Occurs when the user clicks the Help button on the dialog box.
            </summary>
        </member>
        <member name="M:Vista_Api.FolderBrowserDialog.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Vista_Api.FolderBrowserDialog" /> class.
            </summary>
        </member>
        <member name="M:Vista_Api.FolderBrowserDialog.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Vista_Api.FolderBrowserDialog" /> class.
            </summary>
            <param name="forceDownlevel">true to force the use of the old style folder browser dialog, even when the Vista
            style dialog is supported; otherwise, false.</param>
        </member>
        <member name="P:Vista_Api.FolderBrowserDialog.IsVistaFolderDialogSupported">
            <summary>
            Gets a value that indicates whether the current OS supports Vista-style common file dialogs.
            </summary>
            <value>
            Returns true on Windows Vista or newer operating systems; otherwise, false.
            </value>
        </member>
        <member name="P:Vista_Api.FolderBrowserDialog.Description">
            <summary>
            Gets or sets the descriptive text displayed above the tree view control in the dialog box, or below the list view control
            in the Vista style dialog.
            </summary>
            <value>
            The description to display. The default is an empty string ("").
            </value>
        </member>
        <member name="P:Vista_Api.FolderBrowserDialog.RootFolder">
            <summary>
            Gets or sets the root folder where the browsing starts from. This property has no effect if the Vista style
            dialog is used.
            </summary>
            <value>
            One of the <see cref="T:System.Environment.SpecialFolder" /> values. The default is Desktop.
            </value>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Environment.SpecialFolder" /> values.</exception>
        </member>
        <member name="P:Vista_Api.FolderBrowserDialog.SelectedPath">
            <summary>
            Gets or sets the path selected by the user.
            </summary>
            <value>
            The path of the folder first selected in the dialog box or the last folder selected by the user. The default is an empty string ("").
            </value>
        </member>
        <member name="P:Vista_Api.FolderBrowserDialog.ShowNewFolderButton">
            <summary>
            Gets or sets a value indicating whether the New Folder button appears in the folder browser dialog box. This
            property has no effect if the Vista style dialog is used; in that case, the New Folder button is always shown.
            </summary>
            <value>
            true if the New Folder button is shown in the dialog box; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:Vista_Api.FolderBrowserDialog.UseDescriptionForTitle">
            <summary>
            Gets or sets a value that indicates whether to use the value of the <see cref="P:Vista_Api.FolderBrowserDialog.Description" /> property
            as the dialog title for Vista style dialogs. This property has no effect on old style dialogs.
            </summary>
            <value>true to indicate that the value of the <see cref="P:Vista_Api.FolderBrowserDialog.Description" /> property is used as dialog title; false
            to indicate the value is added as additional text to the dialog. The default is false.</value>
        </member>
        <member name="M:Vista_Api.FolderBrowserDialog.Reset">
            <summary>
            Resets all properties to their default values.
            </summary>
        </member>
        <member name="M:Vista_Api.FolderBrowserDialog.RunDialog(System.IntPtr)">
            <summary>
            Specifies a common dialog box.
            </summary>
            <param name="hwndOwner">A value that represents the window handle of the owner window for the common dialog box.</param>
            <returns>true if the file could be opened; otherwise, false.</returns>
        </member>
        <member name="M:Vista_Api.FolderBrowserDialog.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Vista_Api.FileDialog" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Vista_Api.OpenFileDialog">
            <summary>
            Prompts the user to open a file.
            </summary>
            <remarks>
            This class will use the Vista style open file dialog if possible, and automatically fall back to the old-style 
            dialog on versions of Windows older than Vista.
            </remarks>
        </member>
        <member name="M:Vista_Api.OpenFileDialog.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Vista_Api.OpenFileDialog" /> class.
            </summary>
        </member>
        <member name="M:Vista_Api.OpenFileDialog.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Vista_Api.OpenFileDialog" /> class.
            </summary>
            <param name="forceDownlevel">When true, the old style common file dialog will always be used even if the OS supports the Vista style.</param>
        </member>
        <member name="P:Vista_Api.OpenFileDialog.CheckFileExists">
            <summary>
            Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.
            </summary>
            <value>
            true if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, false. The default value is true.
            </value>
        </member>
        <member name="P:Vista_Api.OpenFileDialog.Multiselect">
            <summary>
            Gets or sets a value indicating whether the dialog box allows multiple files to be selected.
            </summary>
            <value>
            true if the dialog box allows multiple files to be selected together or concurrently; otherwise, false. 
            The default value is false.
            </value>
        </member>
        <member name="P:Vista_Api.OpenFileDialog.ShowReadOnly">
            <summary>
            Gets or sets a value indicating whether the dialog box contains a read-only check box.
            </summary>
            <value>
            true if the dialog box contains a read-only check box; otherwise, false. The default value is false.
            </value>
            <remarks>
            If the Vista style dialog is used, this property can only be used to determine whether the user chose
            Open as read-only on the dialog; setting it in code will have no effect.
            </remarks>
        </member>
        <member name="P:Vista_Api.OpenFileDialog.ReadOnlyChecked">
            <summary>
            Gets or sets a value indicating whether the read-only check box is selected.
            </summary>
            <value>
            true if the read-only check box is selected; otherwise, false. The default value is false.
            </value>
        </member>
        <member name="M:Vista_Api.OpenFileDialog.Reset">
            <summary>
            Resets all properties to their default values.
            </summary>
        </member>
        <member name="M:Vista_Api.OpenFileDialog.OpenFile">
            <summary>
            Opens the file selected by the user, with read-only permission. The file is specified by the FileName property. 
            </summary>
            <returns>A Stream that specifies the read-only file selected by the user.</returns>
            <exception cref="T:System.ArgumentNullException">The file name is null.</exception>
        </member>
        <member name="T:Vista_Api.SaveFileDialog">
            <summary>
            Prompts the user to select a location for saving a file.
            </summary>
            <remarks>
            This class will use the Vista style save file dialog if possible, and automatically fall back to the old-style 
            dialog on versions of Windows older than Vista.
            </remarks>
        </member>
        <member name="M:Vista_Api.SaveFileDialog.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Vista_Api.SaveFileDialog" /> class.
            </summary>
        </member>
        <member name="M:Vista_Api.SaveFileDialog.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Vista_Api.SaveFileDialog" /> class.
            </summary>
            <param name="forceDownlevel">When true, the old style common file dialog will always be used even if the OS supports the Vista style.</param>
        </member>
        <member name="P:Vista_Api.SaveFileDialog.CreatePrompt">
            <summary>
            Gets or sets a value indicating whether the dialog box prompts the user for permission to create a file if the 
            user specifies a file that does not exist.
            </summary>
            <value>
            true if the dialog box prompts the user before creating a file if the user specifies a file name that does not exist; 
            false if the dialog box automatically creates the new file without prompting the user for permission. The default 
            value is false.
            </value>
        </member>
        <member name="P:Vista_Api.SaveFileDialog.OverwritePrompt">
            <summary>
            Gets or sets a value indicating whether the Save As dialog box displays a warning if the user 
            specifies a file name that already exists.
            </summary>
            <value>
            true if the dialog box prompts the user before overwriting an existing file if the user specifies a file 
            name that already exists; false if the dialog box automatically overwrites the existing file without 
            prompting the user for permission. The default value is true.
            </value>
        </member>
        <member name="M:Vista_Api.SaveFileDialog.Reset">
            <summary>
            Resets all properties to their default values.
            </summary>
        </member>
        <member name="M:Vista_Api.SaveFileDialog.OpenFile">
            <summary>
            Opens the file with read/write permission selected by the user.
            </summary>
            <returns>The read/write file selected by the user.</returns>
        </member>
        <member name="M:Vista_Api.SaveFileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Vista_Api.FileDialog.FileOk" /> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>        
        </member>
        <member name="T:Vista_Api.CommandDialog">
            <summary>
            Provides a Vista-Style command Dialog
            </summary>
        </member>
        <member name="F:Vista_Api.CommandDialog.mSelectedCommandID">
            <summary>
            Keeps the ordinal number of the selected Command Link
            </summary>
        </member>
        <member name="M:Vista_Api.CommandDialog.#ctor">
            <summary>
            Creates a new CommandDialog
            </summary>
        </member>
        <member name="M:Vista_Api.CommandDialog.#ctor(System.Collections.Generic.List{Vista_Api.CommandLink})">
            <summary>
            Gives a List of CommandLinks
            </summary>
            <param name="commandLinks"></param>
        </member>
        <member name="P:Vista_Api.CommandDialog.Title">
            <summary>
            Der Text erscheint als Überschrift innerhalb er Abfrage
            </summary>
        </member>
        <member name="P:Vista_Api.CommandDialog.Text">
            <summary>
            Ruft den Text in der Kopfzeile des Controls ab oder legt diesen fest
            </summary>
        </member>
        <member name="P:Vista_Api.CommandDialog.Description">
            <summary>
            Der text erscheint als längerer Beschreibender Text unter der Überschrift
            </summary>
        </member>
        <member name="P:Vista_Api.CommandDialog.SelectedCommandLink">
            <summary>
            Returns the selected Command Link Item
            </summary>
        </member>
        <member name="P:Vista_Api.CommandDialog.SelectedCommandLinkIndex">
            <summary>
            Returns the index number of the SelectedCommandButton
            </summary>
        </member>
        <member name="P:Vista_Api.CommandDialog.CommandLinks">
            <summary>
            Provies a List ob CommandLink Objects. Each of them is a Clickable button within the CommandDialog
            </summary>
        </member>
        <member name="P:Vista_Api.CommandDialog.ShowCancelButton">
            <summary>
            True if a Cancelbutton should be shown, false otherwise.
            </summary>
        </member>
        <member name="P:Vista_Api.CommandDialog.CancelButton">
            <summary>
            Stellt einen Abbrechen-Button des Dialoges bereit
            </summary>
        </member>
        <member name="M:Vista_Api.CommandDialog.OnActivated(System.EventArgs)">
            <summary>
            Dialog is activated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Vista_Api.CommandDialog.OnDeactivate(System.EventArgs)">
            <summary>
            Dialog losts its active state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Vista_Api.CommandDialog.OnClosed(System.EventArgs)">
            <summary>
            Dialog closed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Vista_Api.CommandDialog.Dispose(System.Boolean)">
            <summary>
            Form overrides dispose to clean up the component list.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Vista_Api.CommandLink">
            <summary>
            Provides a LinkButton for the Vista-Style CommandDialog
            </summary>
        </member>
        <member name="P:Vista_Api.CommandLink.CreateParams">
            <summary>
            Creates Parameters
            </summary>
        </member>
        <member name="E:Vista_Api.CommandLink.Selected">
            <summary>
            Fires If a Command Link was clicked
            </summary>
        </member>
        <member name="T:Vista_Api.CommandLink.DisplayStyle">
            <summary>
            The Icon-Style for a Command Link
            </summary>
        </member>
        <member name="F:Vista_Api.CommandLink.DisplayStyle.Arrow">
            <summary>
            Paints a green arrow
            </summary>
        </member>
        <member name="F:Vista_Api.CommandLink.DisplayStyle.Shield">
            <summary>
            Paints a Shield-Symbol for security-relevant commands
            </summary>
        </member>
        <member name="M:Vista_Api.CommandLink.#ctor">
            <summary>
            Provides a new CommandLink
            </summary>
        </member>
        <member name="M:Vista_Api.CommandLink.#ctor(Vista_Api.CommandLink.DisplayStyle)">
            <summary>
            Provides a new CommandLink with the selected Style
            </summary>
        </member>
        <member name="M:Vista_Api.CommandLink.#ctor(Vista_Api.CommandLink.DisplayStyle,System.String)">
            <summary>
            Provides a new CommandLink withe the selected Style and maintext
            </summary>
        </member>
        <member name="M:Vista_Api.CommandLink.#ctor(Vista_Api.CommandLink.DisplayStyle,System.String,System.String)">
            <summary>
            Provides a new CommandLink with a maintext and descriptiontext
            </summary>
            <param name="style"></param>
            <param name="text"></param>
            <param name="description"></param>
        </member>
        <member name="P:Vista_Api.CommandLink.Text">
            <summary>
            Maintext on this link
            </summary>
        </member>
        <member name="P:Vista_Api.CommandLink.Description">
            <summary>
            Longer, but smaller Text on this link
            </summary>
        </member>
        <member name="P:Vista_Api.CommandLink.Style">
            <summary>
            The icon style for this Link
            </summary>
        </member>
        <member name="M:Vista_Api.CommandLink.ActivateChanged(System.Boolean)">
            <summary>
            Activated-State changed
            </summary>
            <param name="activate"></param>
        </member>
        <member name="M:Vista_Api.CommandLink.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the Link
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Vista_Api.CommandLink.Dispose(System.Boolean)">
            <summary>
            UserControl overrides dispose to clean up the component list.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Vista_Api.ListView">
            <summary>
            A ListView wise enough to display tooltips when needed.
            The tooltips are displayed over ListViewItem or ListViewSubItem.
            </summary>
        </member>
        <member name="M:Vista_Api.ListView.OnHandleCreated(System.EventArgs)">
            <summary>
            Handle Created
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Vista_Api.TreeView">
            <summary>
            Summary description for ctlTreeview.
            </summary>
        </member>
        <member name="P:Vista_Api.TreeView.CreateParams">
            <summary>
            Creates Parameters
            </summary>
        </member>
        <member name="M:Vista_Api.TreeView.OnHandleCreated(System.EventArgs)">
            <summary>
            Handle Created
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Vista_Api.Dialog.Native.NativeMethods.IsVistaOrLater">
            <value>
            Returns true on Windows Vista or newer operating systems; otherwise, false.
            </value>
        </member>
        <member name="T:Vista_Api.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:Vista_Api.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:Vista_Api.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
    </members>
</doc>
