<?xml version="1.0"?>
<doc>
<assembly>
<name>
SendErrorMessage
</name>
</assembly>
<members>
<member name="T:ClausSoftware.ErrorReporting.My.Resources.Resources">
<summary>
  Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
</summary>
</member>
<member name="P:ClausSoftware.ErrorReporting.My.Resources.Resources.ResourceManager">
<summary>
  Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
</summary>
</member>
<member name="P:ClausSoftware.ErrorReporting.My.Resources.Resources.Culture">
<summary>
  Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
  Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
</summary>
</member>
<member name="T:ClausSoftware.ErrorReporting.frmErrorMessage">
 <summary>
 Stellt den Fehlerbereicht dar
 </summary>
 <remarks></remarks>
</member>
<member name="M:ClausSoftware.ErrorReporting.frmErrorMessage.SendMessage">
 <summary>
 Sendet die Nachricht an den Webdienst
 </summary>
 <remarks></remarks>
</member>
<member name="T:ClausSoftware.ErrorReporting.frmWaitForSending">
 <summary>
 Stelt ein Warte-Fenster bereit
 </summary>
 <remarks></remarks>
</member>
<member name="T:ClausSoftware.ErrorReporting.MainErrorHandler">
 <summary>
 Stellt eine Fehlerbehandlung bereit, die nur im absoluten Crash erschient
 </summary>
 <remarks></remarks>
</member>
<member name="M:ClausSoftware.ErrorReporting.MainErrorHandler.#ctor(ClausSoftware.mainApplication)">
 <summary>
 Initialisert das Application-Exception Handling
 </summary>
 <remarks></remarks>
</member>
<member name="M:ClausSoftware.ErrorReporting.MainErrorHandler.UnhandledException(System.Object,System.Threading.ThreadExceptionEventArgs)">
 <summary>
 Behandelt eine allgemeine unbehandelte Ausnahme, die nicht zu einem Programmabbruch führt
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ClausSoftware.ErrorReporting.MainErrorHandler.AppCrashHandler(System.Object,System.UnhandledExceptionEventArgs)">
 <summary>
 Enthält die Senke in der alle ausnahmen einlaufen, die zu einem Programmabbruch führen
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ClausSoftware.ErrorReporting.MainErrorHandler.GetExceptionHashID">
 <summary>
 Ermittelt von einer gegebenen Ausnahme einen eindeutigen Hashwert, um verschiedene Fehlerzustände identifizieren zu können
 </summary>
</member>
<member name="M:ClausSoftware.ErrorReporting.MainErrorHandler.GetExceptionHashID(System.Exception)">
 <summary>
 Ermittelt von einer gegebenen Ausnahme einen eindeutigen Hashwert, um verschiedene Fehlerzustände identifizieren zu können
 </summary>
 <param name="ex">Eine Ausnahme, die Rekursiv bis zur Basis untersucht wird</param>
 <returns>Einen Hashwert, der die Ausnahme und den gesamten Stacktrace bis zur Baiss identifiziert</returns>
 <remarks></remarks>
</member>
<member name="M:ClausSoftware.ErrorReporting.MainErrorHandler.SendErrorReport">
 <summary>
 Sendet die Fehlernachricht an einen Empänger
 </summary>
 <remarks></remarks>
</member>
<member name="M:ClausSoftware.ErrorReporting.MainErrorHandler.GetSessionDetails">
 <summary>
 Ruft allgemeine Daten ab, die für die Analyse relevant sein könnten
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReport">
 <summary>
 Stellt eine Klasse bereit, die Fehlerinformationen enthält
 </summary>
 <remarks></remarks>
</member>
<member name="P:ClausSoftware.ErrorReporting.ErrorReport.exceptionName">
 <summary>
 Name der Ausnahme
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ClausSoftware.ErrorReporting.ErrorReport.ExceptionStack">
 <summary>
 Aufrufstack, in der obersten Methode wurde die Ausnahme ausgelöst
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.#ctor">
<remarks/>
</member>
<member name="E:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageCompleted">
<remarks/>
</member>
<member name="E:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageExUserMessageCompleted">
<remarks/>
</member>
<member name="E:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageexCompleted">
<remarks/>
</member>
<member name="E:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.UploadFileCompleted">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessage(System.String,System.String)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageExUserMessage(System.String,System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageExUserMessageAsync(System.String,System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageExUserMessageAsync(System.String,System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageex(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageexAsync(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.SendErrorMessageexAsync(System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.UploadFile(System.Byte[],System.String)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.UploadFileAsync(System.Byte[],System.String)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.UploadFileAsync(System.Byte[],System.String,System.Object)">
<remarks/>
</member>
<member name="M:ClausSoftware.ErrorReporting.ErrorReportingService.ErrorReporting.CancelAsync(System.Object)">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageCompletedEventHandler">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageCompletedEventArgs">
<remarks/>
</member>
<member name="P:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageExUserMessageCompletedEventHandler">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageExUserMessageCompletedEventArgs">
<remarks/>
</member>
<member name="P:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageExUserMessageCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageexCompletedEventHandler">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageexCompletedEventArgs">
<remarks/>
</member>
<member name="P:ClausSoftware.ErrorReporting.ErrorReportingService.SendErrorMessageexCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.UploadFileCompletedEventHandler">
<remarks/>
</member>
<member name="T:ClausSoftware.ErrorReporting.ErrorReportingService.UploadFileCompletedEventArgs">
<remarks/>
</member>
<member name="P:ClausSoftware.ErrorReporting.ErrorReportingService.UploadFileCompletedEventArgs.Result">
<remarks/>
</member>
</members>
</doc>
